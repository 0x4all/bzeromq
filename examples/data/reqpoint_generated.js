// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @constructor
 */
function ReqPoint() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ReqPoint}
 */
ReqPoint.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ReqPoint=} obj
 * @returns {ReqPoint}
 */
ReqPoint.getRootAsReqPoint = function(bb, obj) {
  return (obj || new ReqPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
ReqPoint.prototype._reqid = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ReqPoint.prototype.route = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ReqPoint.prototype.method = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
ReqPoint.prototype.x = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
ReqPoint.prototype.y = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ReqPoint.startReqPoint = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} _reqid
 */
ReqPoint.add_Reqid = function(builder, _reqid) {
  builder.addFieldInt32(0, _reqid, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} routeOffset
 */
ReqPoint.addRoute = function(builder, routeOffset) {
  builder.addFieldOffset(1, routeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} methodOffset
 */
ReqPoint.addMethod = function(builder, methodOffset) {
  builder.addFieldOffset(2, methodOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 */
ReqPoint.addX = function(builder, x) {
  builder.addFieldFloat32(3, x, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} y
 */
ReqPoint.addY = function(builder, y) {
  builder.addFieldFloat32(4, y, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ReqPoint.endReqPoint = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
ReqPoint.finishReqPointBuffer = function(builder, offset) {
  builder.finish(offset);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} _reqid
 * @param {flatbuffers.Offset} routeOffset
 * @param {flatbuffers.Offset} methodOffset
 * @param {number} x
 * @param {number} y
 * @returns {flatbuffers.Offset}
 */
ReqPoint.createReqPoint = function(builder, _reqid, routeOffset, methodOffset, x, y) {
  ReqPoint.startReqPoint(builder);
  ReqPoint.add_Reqid(builder, _reqid);
  ReqPoint.addRoute(builder, routeOffset);
  ReqPoint.addMethod(builder, methodOffset);
  ReqPoint.addX(builder, x);
  ReqPoint.addY(builder, y);
  return ReqPoint.endReqPoint(builder);
}

// Exports for Node.js and RequireJS
this.ReqPoint = ReqPoint;
